trigger:
- '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '8.x'
  artifactName: 'drop'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    command: 'install'
    # If your package.json is in a subfolder, e.g., Tailspin.SpaceGame.Web:
    # workingDirectory: 'Tailspin.SpaceGame.Web'

- script: 'npm run compile-sass' # Assuming you add a script to package.json
  displayName: 'Compile Sass assets'
  # Make sure this script exists in your package.json:
  # "scripts": {
  #   "compile-sass": "sass $(wwwrootDir):$(wwwrootDir)" // Basic example
  # }
  # Or if using Gulp, ensure your Gulp task handles it:
  # task: Gulp@1
  #   displayName: 'Run gulp sass task'
  #   inputs:
  #     targets: 'compileSass' # Or whatever your gulp task name is

- task: Gulp@1
  displayName: 'Run gulp tasks'
  #inputs:
    # Ensure your gulpfile.js is in the expected location
    # targets: 'default' # Or specific tasks if needed

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: true
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: false

- publish: '$(Build.ArtifactStagingDirectory)'
  artifact: '$(artifactName)'
  displayName: 'Publish Build Artifact'
  condition: succeededOrFailed()